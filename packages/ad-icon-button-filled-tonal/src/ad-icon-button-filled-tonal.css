/* write css for icon button filled tonal */
/* take value from ../../../packages/ad-icon-button-filled-tonal/readme.md */

/* style button for icon button filled tonal */
button {
    display: flex;
    align-items: center;
    justify-content: center;
    height: var(--ad-comp-filled-tonal-icon-button-container-size);
    width: var(--ad-comp-filled-tonal-icon-button-container-size);
    border-radius: var(--ad-comp-filled-tonal-icon-button-container-shape);
    outline: none;
    border: none;
    position: relative;
    cursor: pointer;
    background-color: var(--ad-sys-color-secondary-container);
}

/* style unselected class when button */
button.unselected {
    background-color: var(--ad-ref-palette-neutral20);
}

/* style selected class when button and unselected both */
button.selected {
    background-color: var(--ad-sys-color-secondary-container);
}

/* style button before */
button::before {
    content: " ";
    position: absolute;
    inset: 0;
    border-radius: inherit;
}

/* style icon class  */
.icon {
    height: var(--ad-comp-filled-tonal-icon-button-icon-size);
}

/* style slot inside of icon class */
.icon ::slotted(*) {
    font-size: var(--ad-comp-filled-tonal-icon-button-icon-size);
    color: var(--ad-sys-color-on-secondary-container);
}

/* style slot inside of icon class when button unselected */
button.unselected .icon ::slotted(*) {
    color: var(--ad-sys-color-on-surface-variant);
}

/* style slot inside of icon class when button selected */
button.selected .icon ::slotted(*) {
    color: var(--ad-sys-color-on-secondary-container);
}



/* style button when :enabled */
button:enabled {
    background-color: var(--ad-sys-color-secondary-container);
}

/* stytle unselected class when button:enabled */
button:enabled.unselected {
    background-color: var(--ad-ref-palette-neutral20);
}

/* style selected class when button:enabled */
button:enabled.selected {
    background-color: var(--ad-sys-color-secondary-container);
}

/* style slot inside of icon class when button:enabled */
button:enabled .icon ::slotted(*) {
    color: var(--ad-sys-color-on-secondary-container);
}

/* style slot inside of icon class when button:enabled and unselected both */
button:enabled.unselected .icon ::slotted(*) {
    color: var(--ad-sys-color-on-surface-variant);
}

/* style slot inside of icon class when button:enabled and selected both */
button:enabled.selected .icon ::slotted(*) {
    color: var(--ad-sys-color-on-secondary-container);
}



/* style button before when :hover */
button:hover::before {
    background-color: var(--ad-sys-color-on-secondary-container);
    opacity: var(--ad-sys-state-hover-state-layer-opacity);
}

/* style button before when :hover and unselected both */
button:hover.unselected::before {
    background-color: var(--ad-sys-color-on-surface-variant);
    opacity: var(--ad-sys-state-hover-state-layer-opacity);
}

/* style button before when :hover and selected both */
button:hover.selected::before {
    background-color: var(--ad-sys-color-on-secondary-container);
    opacity: var(--ad-sys-state-hover-state-layer-opacity);
}

/* style slot inside of icon class when button:hover */
button:hover .icon ::slotted(*) {
    color: var(--ad-sys-color-on-secondary-container);
}

/* style slot inside of icon class when button:hover and unselected both */
button:hover.unselected .icon ::slotted(*) {
    color: var(--ad-sys-color-on-surface-variant);
}

/* style slot inside of icon class when button:hover and selected both */
button:hover.selected .icon ::slotted(*) {
    color: var(--ad-sys-color-on-secondary-container);
}



/* style button before when :focus */
button:focus::before {
    background-color: var(--ad-sys-color-on-secondary-container);
    opacity: var(--ad-sys-state-focus-state-layer-opacity);
}

/* style button before when :focus and unselected both */
button:focus.unselected::before {
    background-color: var(--ad-sys-color-on-surface-variant);
    opacity: var(--ad-sys-state-focus-state-layer-opacity);
}

/* style button before when :focus and selected both */
button:focus.selected::before {
    background-color: var(--ad-sys-color-on-secondary-container);
    opacity: var(--ad-sys-state-focus-state-layer-opacity);
}

/* style slot inside of icon class when button:focus */
button:focus .icon ::slotted(*) {
    color: var(--ad-sys-color-on-secondary-container);
}

/* style slot inside of icon class when button:focus and unselected both */
button:focus.unselected .icon ::slotted(*) {
    color: var(--ad-sys-color-on-surface-variant);
}

/* style slot inside of icon class when button:focus and selected both */
button:focus.selected .icon ::slotted(*) {
    color: var(--ad-sys-color-on-secondary-container);
}



/* style button before when :active */
button:active::before {
    background-color: var(--ad-sys-color-on-secondary-container);
    opacity: var(--ad-sys-state-pressed-state-layer-opacity);
}

/* style button before when :active and unselected both */
button:active.unselected::before {
    background-color: var(--ad-sys-color-on-surface-variant);
    opacity: var(--ad-sys-state-pressed-state-layer-opacity);
}

/* style button before when :active and selected both */
button:active.selected::before {
    background-color: var(--ad-sys-color-on-secondary-container);
    opacity: var(--ad-sys-state-pressed-state-layer-opacity);
}

/* style slot inside of icon class when button:active */
button:active .icon ::slotted(*) {
    color: var(--ad-sys-color-on-secondary-container);
}

/* style slot inside of icon class when button:active and unselected both */
button:active.unselected .icon ::slotted(*) {
    color: var(--ad-sys-color-on-surface-variant);
}

/* style slot inside of icon class when button:active and selected both */
button:active.selected .icon ::slotted(*) {
    color: var(--ad-sys-color-on-secondary-container);
}



/* style button when :disabled */
button:disabled {
    background-color: transparent;
    cursor: default;
}

/* style button before for selected, unselected both when button:disabled */
button:disabled::before, button:disabled.unselected::before, button:disabled.selected::before {
    background-color: var(--ad-sys-color-on-surface);
    opacity: var(--ad-comp-filled-tonal-icon-button-disabled-container-opacity);
}

/* style slot inside of icon class for selecterd, unselected both when button:disabled */
button:disabled .icon ::slotted(*), button:disabled.unselected .icon ::slotted(*), button:disabled.selected .icon ::slotted(*) {
    color: var(--ad-sys-color-on-surface);
    opacity: var(--ad-comp-filled-tonal-icon-button-disabled-icon-opacity);
}